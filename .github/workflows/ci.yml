name: ci

on:
  pull_request:
  push:
    branches:
      - main
      - local_test
    tags:
      - v*

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - run: go mod download
      - run: go test -cpu=1,2 -v ./...

  docker-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - run: docker build -t concourse-slack-alert-resource:$GITHUB_RUN_ID-$GITHUB_RUN_NUMBER .
      - run: >
          echo "{\"source\":{\"url\":\"${{ secrets.URL }}\"}}" | docker run -i
          -e "BUILD_TEAM_NAME=main"
          -e "BUILD_PIPELINE_NAME=github-actions"
          -e "BUILD_JOB_NAME=test"
          -e "BUILD_NAME=$GITHUB_RUN_ID-$GITHUB_RUN_NUMBER"
          concourse-slack-alert-resource:$GITHUB_RUN_ID-$GITHUB_RUN_NUMBER
          /opt/resource/out $PWD

  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Prepare
        id: prepare
        run: |
            TAG=${GITHUB_REF##*/}
            echo ::set-output name=tag_name::${TAG}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login do docker.io
        run: docker login -u odidev -p ${{ secrets.DOCKER_TOKEN }}
      - name: build and publish image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            odidev/concourse-slack-alert-resource:${{ steps.prepare.outputs.tag_name }}
            odidev/concourse-slack-alert-resource:latest
